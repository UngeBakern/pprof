<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: wordcount01 Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
/**
 *  SVGPan library 1.2.2
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the
 * first g-element), including the library into any SVG adds the following
 * capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behaviour of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2.2, Tue Aug 30 17:21:56 CEST 2011, Andrea Leofreddi
 *	- Fixed viewBox on root tag (#7)
 *	- Improved zoom speed (#2)
 *
 * 1.2.1, Mon Jul  4 00:33:18 CEST 2011, Andrea Leofreddi
 *	- Fixed a regression with mouse wheel (now working on Firefox 5)
 *	- Working with viewBox attribute (#4)
 *	- Added "use strict;" and fixed resulting warnings (#5)
 *	- Added configuration variables, dragging is disabled by default (#3)
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2017 Andrea Leofreddi <a.leofreddi@vleo.net>. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of the copyright holder nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDERS AND CONTRIBUTORS ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)
var zoomScale = 0.2; // Zoom sensitivity

/// <====
/// END OF CONFIGURATION

var root = document.documentElement;

var state = 'none', svgRoot = null, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(svgRoot == null) {
		var r = root.getElementById("viewport") ? root.getElementById("viewport") : root.documentElement, t = r;

		while(t != root) {
			if(t.getAttribute("viewBox")) {
				setCTM(r, t.getCTM());

				t.removeAttribute("viewBox");
			}

			t = t.parentNode;
		}

		svgRoot = r;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 360; // Chrome/Safari
	else
		delta = evt.detail / -9; // Mozilla

	var z = Math.pow(1 + zoomScale, delta);

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg"
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}
]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1144)">
<title>wordcount01</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1144 700,-1144 700,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_L</title>
<polygon fill="none" stroke="black" points="8,-981 8,-1132 534,-1132 534,-981 8,-981"/>
</g>
<!-- File: wordcount01 -->
<g id="node1" class="node">
<title>File: wordcount01</title>
<g id="a_node1"><a xlink:title="wordcount01">
<polygon fill="#f8f8f8" stroke="black" points="525.5,-1124 16.5,-1124 16.5,-989 525.5,-989 525.5,-1124"/>
<text text-anchor="start" x="24.5" y="-1107.2" font-family="Times,serif" font-size="16.00">File: wordcount01</text>
<text text-anchor="start" x="24.5" y="-1089.2" font-family="Times,serif" font-size="16.00">Type: cpu</text>
<text text-anchor="start" x="24.5" y="-1071.2" font-family="Times,serif" font-size="16.00">Time: Feb 9, 2024 at 2:09pm (UTC)</text>
<text text-anchor="start" x="24.5" y="-1053.2" font-family="Times,serif" font-size="16.00">Duration: 506.53ms, Total samples = 380ms (75.02%)</text>
<text text-anchor="start" x="24.5" y="-1035.2" font-family="Times,serif" font-size="16.00">Showing nodes accounting for 380ms, 100% of 380ms total</text>
<text text-anchor="start" x="24.5" y="-998.2" font-family="Times,serif" font-size="16.00">See https://git.io/JfYMW for how to read the graph</text>
</a>
</g>
</g>
<!-- N1 -->
<g id="node1" class="node">
<title>N1</title>
<g id="a_node1"><a xlink:title="syscall.Syscall (350ms)">
<polygon fill="#edd6d5" stroke="#b20400" points="696,-86 484,-86 484,0 696,0 696,-86"/>
<text text-anchor="middle" x="590" y="-62.8" font-family="Times,serif" font-size="24.00">syscall</text>
<text text-anchor="middle" x="590" y="-36.8" font-family="Times,serif" font-size="24.00">Syscall</text>
<text text-anchor="middle" x="590" y="-10.8" font-family="Times,serif" font-size="24.00">350ms (92.11%)</text>
</a>
</g>
</g>
<!-- N2 -->
<g id="node2" class="node">
<title>N2</title>
<g id="a_node2"><a xlink:title="runtime.main (380ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="636,-1074.5 544,-1074.5 544,-1038.5 636,-1038.5 636,-1074.5"/>
<text text-anchor="middle" x="590" y="-1063.6" font-family="Times,serif" font-size="8.00">runtime</text>
<text text-anchor="middle" x="590" y="-1054.6" font-family="Times,serif" font-size="8.00">main</text>
<text text-anchor="middle" x="590" y="-1045.6" font-family="Times,serif" font-size="8.00">0 of 380ms (100%)</text>
</a>
</g>
</g>
<!-- N8 -->
<g id="node8" class="node">
<title>N8</title>
<g id="a_node8"><a xlink:title="main.main (380ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="636,-938 544,-938 544,-902 636,-902 636,-938"/>
<text text-anchor="middle" x="590" y="-927.1" font-family="Times,serif" font-size="8.00">main</text>
<text text-anchor="middle" x="590" y="-918.1" font-family="Times,serif" font-size="8.00">main</text>
<text text-anchor="middle" x="590" y="-909.1" font-family="Times,serif" font-size="8.00">0 of 380ms (100%)</text>
</a>
</g>
</g>
<!-- N2&#45;&gt;N8 -->
<g id="edge2" class="edge">
<title>N2&#45;&gt;N8</title>
<g id="a_edge2"><a xlink:title="runtime.main &#45;&gt; main.main (380ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M590,-1038.47C590,-1015.85 590,-975.64 590,-948.64"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="595.25,-948.32 590,-938.32 584.75,-948.32 595.25,-948.32"/>
</a>
</g>
<g id="a_edge2&#45;label"><a xlink:title="runtime.main &#45;&gt; main.main (380ms)">
<text text-anchor="middle" x="616.5" y="-959.8" font-family="Times,serif" font-size="14.00"> 380ms</text>
</a>
</g>
</g>
<!-- N3 -->
<g id="node3" class="node">
<title>N3</title>
<g id="a_node3"><a xlink:title="internal/poll.(*FD).Read (370ms)">
<polygon fill="#edd5d5" stroke="#b20100" points="651,-524 529,-524 529,-456 651,-456 651,-524"/>
<text text-anchor="middle" x="590" y="-511.2" font-family="Times,serif" font-size="11.00">poll</text>
<text text-anchor="middle" x="590" y="-499.2" font-family="Times,serif" font-size="11.00">(*FD)</text>
<text text-anchor="middle" x="590" y="-487.2" font-family="Times,serif" font-size="11.00">Read</text>
<text text-anchor="middle" x="590" y="-475.2" font-family="Times,serif" font-size="11.00">10ms (2.63%)</text>
<text text-anchor="middle" x="590" y="-463.2" font-family="Times,serif" font-size="11.00">of 370ms (97.37%)</text>
</a>
</g>
</g>
<!-- N6 -->
<g id="node6" class="node">
<title>N6</title>
<g id="a_node6"><a xlink:title="internal/poll.(*FD).readUnlock (10ms)">
<polygon fill="#edecea" stroke="#b2aa9b" points="520.5,-390 431.5,-390 431.5,-346 520.5,-346 520.5,-390"/>
<text text-anchor="middle" x="476" y="-379.6" font-family="Times,serif" font-size="8.00">poll</text>
<text text-anchor="middle" x="476" y="-370.6" font-family="Times,serif" font-size="8.00">(*FD)</text>
<text text-anchor="middle" x="476" y="-361.6" font-family="Times,serif" font-size="8.00">readUnlock</text>
<text text-anchor="middle" x="476" y="-352.6" font-family="Times,serif" font-size="8.00">0 of 10ms (2.63%)</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;N6 -->
<g id="edge10" class="edge">
<title>N3&#45;&gt;N6</title>
<g id="a_edge10"><a xlink:title="internal/poll.(*FD).Read &#45;&gt; internal/poll.(*FD).readUnlock (10ms)">
<path fill="none" stroke="#b2aa9b" d="M558.55,-455.89C541.29,-437.72 520.09,-415.41 503.49,-397.94"/>
<polygon fill="#b2aa9b" stroke="#b2aa9b" points="505.65,-395.13 496.22,-390.29 500.57,-399.95 505.65,-395.13"/>
</a>
</g>
<g id="a_edge10&#45;label"><a xlink:title="internal/poll.(*FD).Read &#45;&gt; internal/poll.(*FD).readUnlock (10ms)">
<text text-anchor="middle" x="562" y="-419.3" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N7 -->
<g id="node7" class="node">
<title>N7</title>
<g id="a_node7"><a xlink:title="internal/poll.ignoringEINTRIO (350ms)">
<polygon fill="#edd6d5" stroke="#b20400" points="640,-386 540,-386 540,-350 640,-350 640,-386"/>
<text text-anchor="middle" x="590" y="-375.1" font-family="Times,serif" font-size="8.00">poll</text>
<text text-anchor="middle" x="590" y="-366.1" font-family="Times,serif" font-size="8.00">ignoringEINTRIO</text>
<text text-anchor="middle" x="590" y="-357.1" font-family="Times,serif" font-size="8.00">0 of 350ms (92.11%)</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;N7 -->
<g id="edge6" class="edge">
<title>N3&#45;&gt;N7</title>
<g id="a_edge6"><a xlink:title="internal/poll.(*FD).Read &#45;&gt; internal/poll.ignoringEINTRIO (350ms)">
<path fill="none" stroke="#b20400" stroke-width="5" d="M590,-455.89C590,-437.16 590,-414.03 590,-396.34"/>
<polygon fill="#b20400" stroke="#b20400" stroke-width="5" points="594.38,-396.12 590,-386.12 585.63,-396.12 594.38,-396.12"/>
</a>
</g>
<g id="a_edge6&#45;label"><a xlink:title="internal/poll.(*FD).Read &#45;&gt; internal/poll.ignoringEINTRIO (350ms)">
<text text-anchor="middle" x="617.5" y="-426.8" font-family="Times,serif" font-size="14.00"> 350ms</text>
<text text-anchor="middle" x="617.5" y="-411.8" font-family="Times,serif" font-size="14.00"> (inline)</text>
</a>
</g>
</g>
<!-- N4 -->
<g id="node4" class="node">
<title>N4</title>
<g id="a_node4"><a xlink:title="main.readbyte (380ms)">
<polygon fill="#edd5d5" stroke="#b20000" points="645.5,-836 534.5,-836 534.5,-780 645.5,-780 645.5,-836"/>
<text text-anchor="middle" x="590" y="-823.2" font-family="Times,serif" font-size="11.00">main</text>
<text text-anchor="middle" x="590" y="-811.2" font-family="Times,serif" font-size="11.00">readbyte</text>
<text text-anchor="middle" x="590" y="-799.2" font-family="Times,serif" font-size="11.00">10ms (2.63%)</text>
<text text-anchor="middle" x="590" y="-787.2" font-family="Times,serif" font-size="11.00">of 380ms (100%)</text>
</a>
</g>
</g>
<!-- N9 -->
<g id="node9" class="node">
<title>N9</title>
<g id="a_node9"><a xlink:title="os.(*File).Read (370ms)">
<polygon fill="#edd5d5" stroke="#b20100" points="640,-729 540,-729 540,-685 640,-685 640,-729"/>
<text text-anchor="middle" x="590" y="-718.6" font-family="Times,serif" font-size="8.00">os</text>
<text text-anchor="middle" x="590" y="-709.6" font-family="Times,serif" font-size="8.00">(*File)</text>
<text text-anchor="middle" x="590" y="-700.6" font-family="Times,serif" font-size="8.00">Read</text>
<text text-anchor="middle" x="590" y="-691.6" font-family="Times,serif" font-size="8.00">0 of 370ms (97.37%)</text>
</a>
</g>
</g>
<!-- N4&#45;&gt;N9 -->
<g id="edge3" class="edge">
<title>N4&#45;&gt;N9</title>
<g id="a_edge3"><a xlink:title="main.readbyte &#45;&gt; os.(*File).Read (370ms)">
<path fill="none" stroke="#b20100" stroke-width="5" d="M590,-779.95C590,-767.42 590,-752.47 590,-739.45"/>
<polygon fill="#b20100" stroke="#b20100" stroke-width="5" points="594.38,-739.06 590,-729.06 585.63,-739.06 594.38,-739.06"/>
</a>
</g>
<g id="a_edge3&#45;label"><a xlink:title="main.readbyte &#45;&gt; os.(*File).Read (370ms)">
<text text-anchor="middle" x="616.5" y="-750.8" font-family="Times,serif" font-size="14.00"> 370ms</text>
</a>
</g>
</g>
<!-- N5 -->
<g id="node5" class="node">
<title>N5</title>
<g id="a_node5"><a xlink:title="internal/poll.(*fdMutex).rwunlock (10ms)">
<polygon fill="#edecea" stroke="#b2aa9b" points="522,-280 428,-280 428,-224 522,-224 522,-280"/>
<text text-anchor="middle" x="475" y="-267.2" font-family="Times,serif" font-size="11.00">poll</text>
<text text-anchor="middle" x="475" y="-255.2" font-family="Times,serif" font-size="11.00">(*fdMutex)</text>
<text text-anchor="middle" x="475" y="-243.2" font-family="Times,serif" font-size="11.00">rwunlock</text>
<text text-anchor="middle" x="475" y="-231.2" font-family="Times,serif" font-size="11.00">10ms (2.63%)</text>
</a>
</g>
</g>
<!-- N6&#45;&gt;N5 -->
<g id="edge11" class="edge">
<title>N6&#45;&gt;N5</title>
<g id="a_edge11"><a xlink:title="internal/poll.(*FD).readUnlock &#45;&gt; internal/poll.(*fdMutex).rwunlock (10ms)">
<path fill="none" stroke="#b2aa9b" d="M475.81,-345.82C475.68,-330.25 475.49,-308.67 475.33,-290.24"/>
<polygon fill="#b2aa9b" stroke="#b2aa9b" points="478.83,-290.08 475.24,-280.11 471.83,-290.14 478.83,-290.08"/>
</a>
</g>
<g id="a_edge11&#45;label"><a xlink:title="internal/poll.(*FD).readUnlock &#45;&gt; internal/poll.(*fdMutex).rwunlock (10ms)">
<text text-anchor="middle" x="498" y="-309.3" font-family="Times,serif" font-size="14.00"> 10ms</text>
</a>
</g>
</g>
<!-- N11 -->
<g id="node11" class="node">
<title>N11</title>
<g id="a_node11"><a xlink:title="syscall.Read (350ms)">
<polygon fill="#edd6d5" stroke="#b20400" points="640,-270 540,-270 540,-234 640,-234 640,-270"/>
<text text-anchor="middle" x="590" y="-259.1" font-family="Times,serif" font-size="8.00">syscall</text>
<text text-anchor="middle" x="590" y="-250.1" font-family="Times,serif" font-size="8.00">Read</text>
<text text-anchor="middle" x="590" y="-241.1" font-family="Times,serif" font-size="8.00">0 of 350ms (92.11%)</text>
</a>
</g>
</g>
<!-- N7&#45;&gt;N11 -->
<g id="edge7" class="edge">
<title>N7&#45;&gt;N11</title>
<g id="a_edge7"><a xlink:title="internal/poll.ignoringEINTRIO &#45;&gt; syscall.Read (350ms)">
<path fill="none" stroke="#b20400" stroke-width="5" d="M590,-349.69C590,-331.25 590,-301.82 590,-280.26"/>
<polygon fill="#b20400" stroke="#b20400" stroke-width="5" points="594.38,-280.1 590,-270.1 585.63,-280.1 594.38,-280.1"/>
</a>
</g>
<g id="a_edge7&#45;label"><a xlink:title="internal/poll.ignoringEINTRIO &#45;&gt; syscall.Read (350ms)">
<text text-anchor="middle" x="617.5" y="-316.8" font-family="Times,serif" font-size="14.00"> 350ms</text>
<text text-anchor="middle" x="617.5" y="-301.8" font-family="Times,serif" font-size="14.00"> (inline)</text>
</a>
</g>
</g>
<!-- N8&#45;&gt;N4 -->
<g id="edge1" class="edge">
<title>N8&#45;&gt;N4</title>
<g id="a_edge1"><a xlink:title="main.main &#45;&gt; main.readbyte (380ms)">
<path fill="none" stroke="#b20000" stroke-width="6" d="M590,-901.81C590,-887.03 590,-865.18 590,-846.39"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="6" points="595.25,-846.33 590,-836.33 584.75,-846.33 595.25,-846.33"/>
</a>
</g>
<g id="a_edge1&#45;label"><a xlink:title="main.main &#45;&gt; main.readbyte (380ms)">
<text text-anchor="middle" x="617.5" y="-872.8" font-family="Times,serif" font-size="14.00"> 380ms</text>
<text text-anchor="middle" x="617.5" y="-857.8" font-family="Times,serif" font-size="14.00"> (inline)</text>
</a>
</g>
</g>
<!-- N10 -->
<g id="node10" class="node">
<title>N10</title>
<g id="a_node10"><a xlink:title="os.(*File).read (370ms)">
<polygon fill="#edd5d5" stroke="#b20100" points="640,-619 540,-619 540,-575 640,-575 640,-619"/>
<text text-anchor="middle" x="590" y="-608.6" font-family="Times,serif" font-size="8.00">os</text>
<text text-anchor="middle" x="590" y="-599.6" font-family="Times,serif" font-size="8.00">(*File)</text>
<text text-anchor="middle" x="590" y="-590.6" font-family="Times,serif" font-size="8.00">read</text>
<text text-anchor="middle" x="590" y="-581.6" font-family="Times,serif" font-size="8.00">0 of 370ms (97.37%)</text>
</a>
</g>
</g>
<!-- N9&#45;&gt;N10 -->
<g id="edge4" class="edge">
<title>N9&#45;&gt;N10</title>
<g id="a_edge4"><a xlink:title="os.(*File).Read &#45;&gt; os.(*File).read (370ms)">
<path fill="none" stroke="#b20100" stroke-width="5" d="M590,-684.92C590,-669.09 590,-647.15 590,-629.27"/>
<polygon fill="#b20100" stroke="#b20100" stroke-width="5" points="594.38,-629.03 590,-619.03 585.63,-629.03 594.38,-629.03"/>
</a>
</g>
<g id="a_edge4&#45;label"><a xlink:title="os.(*File).Read &#45;&gt; os.(*File).read (370ms)">
<text text-anchor="middle" x="617.5" y="-655.8" font-family="Times,serif" font-size="14.00"> 370ms</text>
<text text-anchor="middle" x="617.5" y="-640.8" font-family="Times,serif" font-size="14.00"> (inline)</text>
</a>
</g>
</g>
<!-- N10&#45;&gt;N3 -->
<g id="edge5" class="edge">
<title>N10&#45;&gt;N3</title>
<g id="a_edge5"><a xlink:title="os.(*File).read &#45;&gt; internal/poll.(*FD).Read (370ms)">
<path fill="none" stroke="#b20100" stroke-width="5" d="M590,-574.75C590,-563.2 590,-548.46 590,-534.59"/>
<polygon fill="#b20100" stroke="#b20100" stroke-width="5" points="594.38,-534.21 590,-524.21 585.63,-534.21 594.38,-534.21"/>
</a>
</g>
<g id="a_edge5&#45;label"><a xlink:title="os.(*File).read &#45;&gt; internal/poll.(*FD).Read (370ms)">
<text text-anchor="middle" x="616.5" y="-545.8" font-family="Times,serif" font-size="14.00"> 370ms</text>
</a>
</g>
</g>
<!-- N12 -->
<g id="node12" class="node">
<title>N12</title>
<g id="a_node12"><a xlink:title="syscall.read (350ms)">
<polygon fill="#edd6d5" stroke="#b20400" points="640,-173 540,-173 540,-137 640,-137 640,-173"/>
<text text-anchor="middle" x="590" y="-162.1" font-family="Times,serif" font-size="8.00">syscall</text>
<text text-anchor="middle" x="590" y="-153.1" font-family="Times,serif" font-size="8.00">read</text>
<text text-anchor="middle" x="590" y="-144.1" font-family="Times,serif" font-size="8.00">0 of 350ms (92.11%)</text>
</a>
</g>
</g>
<!-- N11&#45;&gt;N12 -->
<g id="edge8" class="edge">
<title>N11&#45;&gt;N12</title>
<g id="a_edge8"><a xlink:title="syscall.Read &#45;&gt; syscall.read (350ms)">
<path fill="none" stroke="#b20400" stroke-width="5" d="M590,-233.58C590,-219.65 590,-199.86 590,-183.76"/>
<polygon fill="#b20400" stroke="#b20400" stroke-width="5" points="594.38,-183.31 590,-173.31 585.63,-183.31 594.38,-183.31"/>
</a>
</g>
<g id="a_edge8&#45;label"><a xlink:title="syscall.Read &#45;&gt; syscall.read (350ms)">
<text text-anchor="middle" x="616.5" y="-194.8" font-family="Times,serif" font-size="14.00"> 350ms</text>
</a>
</g>
</g>
<!-- N12&#45;&gt;N1 -->
<g id="edge9" class="edge">
<title>N12&#45;&gt;N1</title>
<g id="a_edge9"><a xlink:title="syscall.read &#45;&gt; syscall.Syscall (350ms)">
<path fill="none" stroke="#b20400" stroke-width="5" d="M590,-136.81C590,-125.82 590,-110.91 590,-96.26"/>
<polygon fill="#b20400" stroke="#b20400" stroke-width="5" points="594.38,-96.21 590,-86.21 585.63,-96.21 594.38,-96.21"/>
</a>
</g>
<g id="a_edge9&#45;label"><a xlink:title="syscall.read &#45;&gt; syscall.Syscall (350ms)">
<text text-anchor="middle" x="616.5" y="-107.8" font-family="Times,serif" font-size="14.00"> 350ms</text>
</a>
</g>
</g>
</g>
</g></svg>
